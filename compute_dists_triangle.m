function compute_dists_triangle(in_fname, upstream_slice, downstream_slice)
% Purpose:  NEW this function replaces compute_dists and has the
%           advantage that these distributions are created from the
%           triangles rather than parcing the data separately
%           This function will take the storage time distributions created
%           by deposit_storage_time.m and generate separate CDF and PDF
%           distributions for the upstream reach, downstream reach, and
%           both reaches.
%           Inputs:     the extreme downstream slice from each reach
%                       the file name
%                       the input files
%           Outputs:    Storage time and age distributions for point bar
%                       and floodplain deposits for each reach and both
%                       reaches combined
%
%           This code is hard coded to remove the final few thousand years
%           of simulation time and to select slices generated by a computer
%           with much more RAM (thus creating only 40 slices)
% Author:   Tobias Hasse tobiack@udel.edu
% Date:     edited October 2021, written November 2018

% %% Make Load in raw data triangels method replaced by loading from
% triangle files
%
% distr_3chan* available at https://doi.org/10.5281/ZENODO.5651874. 
% % load('distr_3chan_211k_30yr_16.mat')
% load(sprintf('%s%s.mat', in_fname, num2str( upstream_slice ) ) )
% % make upstream variables
% pt_bar_dist_u = pt_bar_dist;    % _u for upstream
% vert_dist_u   =   vert_dist;
% 
% distr_3chan* available at https://doi.org/10.5281/ZENODO.5651874. 
% % load('distr_3chan_211k_30yr_36.mat')
% load(sprintf('%s%d.mat', in_fname, downstream_slice  ) )
% other_data_3chan* available at https://doi.org/10.5281/ZENODO.5651874. 
% % load('other_data_3chan_211k_30yr_36.mat')
% load(sprintf('other_data_3chan_211k_30yr_%d.mat', downstream_slice ) )
% % make combined reach variables
% pt_bar_dist_a = pt_bar_dist;    % _a for all upstream and downstream
% vert_dist_a   =   vert_dist;
% % make downstream reach variables
% pt_bar_dist_d = pt_bar_dist_a - pt_bar_dist_u; % _d for downstream
% vert_dist_d   =   vert_dist_a -   vert_dist_u;
% 

%%
descr=strcat('Upstream: These values are the 120-205 ky',...
    ' (4000-6845) pdf cdf median 70th percentile and average (mean)',...
    ' storage times for vertical (flood) deposits, point bar deposits,',...
    ' & all deposits. computed within compute_dists.m from the cdf of',...
    ' storage time November 2018 MAC');
fname='TRH 205k upstream storage triangles.mat';
load( fname, 'pt_bar_dist', 'vert_dist' )

fname='TRH 205k upstream storage time cdf pdf.mat';
create_and_save(descr, fname, pt_bar_dist, vert_dist)

descr=strcat('Downstream: These values are the 120-205 ky',...
    ' (4000-6845) pdf cdf median 70th percentile and average (mean)',...
    ' storage times for vertical (flood) deposits, point bar deposits,',...
    ' & all deposits. computed within compute_dists.m from the cdf of',...
    ' storage time November 2018 MAC');
fname='TRH 205k downstream storage triangles.mat';
load( fname, 'pt_bar_dist', 'vert_dist' )

fname='TRH 205k downstream storage time cdf pdf.mat';
create_and_save(descr, fname, pt_bar_dist, vert_dist)

descr=strcat('up & downstream: These values are the 120-205 ky',...
    ' (4000-6845) pdf cdf median 70th percentile and average (mean)',...
    ' storage times for vertical (flood) deposits, point bar deposits,',...
    ' & all deposits. computed within compute_dists.m from the cdf of',...
    ' storage time November 2018 MAC');
fname='TRH 205k up & downstream storage triangles.mat';
load( fname, 'pt_bar_dist', 'vert_dist' )

fname='TRH 205k ALL storage time cdf pdf.mat';
create_and_save(descr, fname, pt_bar_dist, vert_dist)

end

function create_and_save(descr, fname, pt_bar_dist, vert_dist)
% this function will compute some parameters and save the files

% figure(61)
% imagesc(log(fliplr(vert_dist(4000:6845,1:end-1))))

% obtain the pdf, cdf and 70th percentile distributions from the combined
% point bar and vertically accreted overbank floodplain sediment
[p c m70]=pdfcdfpctile( sum( fliplr( vert_dist(4000:6845,1:end-1) + ...
    pt_bar_dist(4000:6845,1:end-1) ) ),...
    30,.70);
px=[0:size(p,2)]*30;

PDFall = p;         % store the pdf and CDF
CDFall = c;
% the average of a pdf function must be weighted by the x coordinate
aveall = sum(p.*px(1:end-1))/sum(p);
% obtain the pdf cdf and median from the point bar sediment
[p c mdall]=pdfcdfpctile(...
    sum(...
    fliplr(...
    vert_dist(   4000:6845, 1:end-1 )+...
    pt_bar_dist( 4000:6845, 1:end-1 )...
          )...
    ),30,.50);

% obtain the pdf, cdf and 70th percentile distributions from the combined
% point bar and vertically accreted overbank floodplain sediment
[p c mdp]=pdfcdfpctile( sum( fliplr( pt_bar_dist(4000:6845,1:end-1) ) ),...
    30,.50);
PDFp = p;
CDFp = c;
% obtain the pdf cdf and median from the floodplain sediment
[p c mdv]=pdfcdfpctile( sum( fliplr( vert_dist(4000:6845,1:end-1) ) ),...
    30,.50);
PDFv = p;
CDFv = c;

% optional, make figure
% figure%(62)
%     plot(px(2:end),[p',1-c'])
%     set(gca,'yscale','log',...
%         'xscale','log')
%     ylim([.000005 1])

% Optional make Copmlementary CDF
%     CCDF = 1-c;
%     PDF = p;

% Save the distributions
save(fname,'descr','px',...
    'PDFall','CDFall','mdall','m70','aveall',...
    'PDFp','CDFp','mdp',...
    'PDFv','CDFv','mdv',...
    '-v7.3')
end

%%  Make triangle figures
% figure(101)
% subplot(2,2,3)
% imagesc(log(fliplr(pt_bar_dist_a(4000:6845,1:end-1))))
% title('pt bar dist all')
%
% subplot(2,2,1)
% imagesc(log(fliplr(pt_bar_dist_u(4000:6845,1:end-1))))
% title('pt bar dist upstream')
%
% subplot(2,2,2)
% imagesc(log(fliplr(pt_bar_dist_d(4000:6845,1:end-1))))
% title('pt bar dist downstream')
%
% subplot(2,2,4)
% imagesc(log(fliplr(vert_dist_a(4000:6845,1:end-1))))
% title('vert dist vert all')

%% Other testing
% vdb=false(size(vert_dist_d));
% vdb(pt_bar_dist_d<0)=1;
% sum(sum(vdb))
% figure(102)
% imagesc(vdb)
% colorbar



%% debug: the total in vert and pt bar distribution is monotonicaly
% increasing
% for i = 1:40
%     ld = sprintf('distr_211k_30yr_%d.mat',i);
%     load(ld)
%     %     load('distr_211k_30yr_16.mat')
%     vtot(i)=sum(sum(vert_dist));
%     ptot(i)=sum(sum(pt_bar_dist));
% end


%% Test make pdf cdf files from compute_dists_triangle vs compute_dists
% clear
% fname='TRH 205k downstream storage time cdf pdf2.mat';
% load(fname,'descr','px',...
%     'PDFall','CDFall','mdall','m70','aveall',...
%     'PDFp','CDFp','mdp',...
%     'PDFv','CDFv','mdv')
% 
% p2 = PDFp;
% keyboard
% 
% fname='TRH 205k downstream storage time cdf pdf.mat';
% load(fname,'descr','px',...
%     'PDFall','CDFall','mdall','m70','aveall',...
%     'PDFp','CDFp','mdp',...
%     'PDFv','CDFv','mdv')
% 
% figure(1)
% plot(PDFp(1:length(p2))-p2)
